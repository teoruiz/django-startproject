x-common-settings: &common-settings
  build:
    context: .
    dockerfile: ./Dockerfile
    target: dev
  depends_on:
    db:
      condition: service_healthy
  environment:
    - "ALLOWED_HOSTS=*"
    - "DATABASE_URL=postgres://postgres@db/postgres"
    - "DJANGO_DEBUG=true"
  restart: on-failure
  #volumes:
  #  - .:/src:cache
  develop:
    # Create a `watch` configuration to update the app
    # https://docs.docker.com/compose/file-watch/#compose-watch-versus-bind-mounts
    watch:
      # Sync the working directory with the `/app` directory in the container
      - action: sync
        path: .
        target: /src
        # Exclude the project virtual environment â€” it could be for a
        # different platform in the container
        ignore:
          - .venv/

      # Rebuild the image if dependencies change by checking uv.lock
      - action: rebuild
        path: ./uv.lock

services:

  db:
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "postgres"]
      interval: 10s
      timeout: 0.5s
      retries: 3
    image: "pgautoupgrade/pgautoupgrade:latest"
    init: true
    user: postgres
    volumes:
      - .:/src:cache
      - postgres-data:/var/lib/postgresql/data/

  utility:
    <<: *common-settings
    command: [
      "uv",
      "run",
      "-m",
      "manage",
      "--version"
    ]
    tty: true

  web:
    <<: *common-settings
    command: [
      "uv",
      "run",
      "-m",
      "manage",
      "devserver",
      "--skip-checks",
      "0.0.0.0:8000"
    ]
    entrypoint: ["/src/compose-entrypoint.sh"]
    init: true
    ports:
      - "8000:8000"
    tty: true

  tailwind-sidecar:
    <<: *common-settings
    env_file:
      - .env
    command: ["uv", "run", "-m", "manage", "tailwind", "watch"]
    tty: true


volumes:
  postgres-data:
